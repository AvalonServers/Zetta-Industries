buildscript {
    repositories {
        mavenCentral()
        maven {
            name = "forge"
            url = "http://files.minecraftforge.net/maven"
        }
        maven {
            name = "sonatype"
            url = "https://oss.sonatype.org/content/repositories/snapshots/"
        }
    }
    dependencies {
        classpath 'net.minecraftforge.gradle:ForgeGradle:1.2-SNAPSHOT'
    }
}

apply plugin: 'forge'

version = "0.2a"
group= "com.bymarcin.zettaindustries" // http://maven.apache.org/guides/mini/guide-naming-conventions.html
archivesBaseName = "zettaindustries"

sourceSets{
	api{
		java {
			srcDir 'src/api/java'
		}
		resources {
			srcDir 'src/api/resources'
		}
	}
	main {
		compileClasspath += api.output
		runtimeClasspath += api.output
	}
}


minecraft {
    version = "1.7.10-10.13.2.1291"
	if (file('../run').exists()){
		assetDir = "../run/assets"
	}else{
		assetDir = "assets"
	}
}

repositories {
    maven {
        name = "IGW"
        url = "http://maven.k-4u.nl/"
    }
}

dependencies {
    compile "igwmod:IGW-Mod-1.7.10:1.1.3-18:userdev"
    compile files("lib/buildcraft-6.0.17-dev.jar")
    compile files("lib/OpenComputers-MC1.7.10-1.5.9.21-dev.jar")
    compile files("lib/CoFHCore-[1.7.10]3.0.2-262-dev.jar")
    compile files("lib/forestry_1.7.10-3.5.6.15-dev.jar")


    // you may put jars on which you depend on in ./libs
    // or you may define them like so..
    //compile "some.group:artifact:version:classifier"
    //compile "some.group:artifact:version"
      
    // real examples
    //compile 'com.mod-buildcraft:buildcraft:6.0.8:dev'  // adds buildcraft to the dev env
    //compile 'com.googlecode.efficient-java-matrix-library:ejml:0.24' // adds ejml to the dev env

    // for more info...
    // http://www.gradle.org/docs/current/userguide/artifact_dependencies_tutorial.html
    // http://www.gradle.org/docs/current/userguide/dependency_management.html

}

processResources
{
    // this will ensure that this task is redone when the versions change.
    inputs.property "version", project.version
    inputs.property "mcversion", project.minecraft.version

    // replace stuff in mcmod.info, nothing else
    from(sourceSets.main.resources.srcDirs) {
        include 'mcmod.info'
                
        // replace version and mcversion
        expand 'version':project.version, 'mcversion':project.minecraft.version
    }
        
    // copy everything else, thats not the mcmod.info
    from(sourceSets.main.resources.srcDirs) {
        exclude 'mcmod.info'
    }
}
